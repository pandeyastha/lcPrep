
class Solution {
private:
    void dfs(TreeNode* root,int level,vector<int>&helper){
        if(root==NULL) return;
        if(level>=helper.size())helper.push_back(0);
        helper[level]+=root->val;
        if(root->left)dfs(root->left,level+1,helper);
        if(root->right)dfs(root->right,level+1,helper);
    }
public:
    int maxLevelSum(TreeNode* root) {
        if(root==NULL) return 0;
        vector<int>helper;
        dfs(root,0,helper);
        int max=INT_MIN;
        int answer=-1;
        for(int i=0;i<helper.size();i++){
            if(helper[i]>max){
                max=helper[i];
                answer=i+1;
            }
        }
        return answer;
    }
};
